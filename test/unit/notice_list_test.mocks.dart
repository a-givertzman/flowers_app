// Mocks generated by Mockito 5.1.0 from annotations
// in flowers_app/test/unit/notice_list_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:flowers_app/domain/notice/notice_list_viewed.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [NoticeListViewed].
///
/// See the documentation for Mockito's code generation for more information.
class MockNoticeListViewed extends _i1.Mock implements _i2.NoticeListViewed {
  MockNoticeListViewed() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool isEmpty() =>
      (super.noSuchMethod(Invocation.method(#isEmpty, []), returnValue: false)
          as bool);
  @override
  _i3.Future<bool> setViewed({String? noticeId, String? purchaseContentId}) =>
      (super.noSuchMethod(
          Invocation.method(#setViewed, [],
              {#noticeId: noticeId, #purchaseContentId: purchaseContentId}),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  _i3.Future<bool> contains({String? noticeId}) => (super.noSuchMethod(
      Invocation.method(#contains, [], {#noticeId: noticeId}),
      returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  _i3.Future<bool> containsInGroup(
          {String? noticeId, String? purchaseContentId}) =>
      (super.noSuchMethod(
          Invocation.method(#containsInGroup, [],
              {#noticeId: noticeId, #purchaseContentId: purchaseContentId}),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  String localStorageViewedNoticePath(String? clientId) => (super.noSuchMethod(
      Invocation.method(#localStorageViewedNoticePath, [clientId]),
      returnValue: '') as String);
}
